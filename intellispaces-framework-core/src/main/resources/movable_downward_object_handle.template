package {{$packageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * Movable downward object handle for objects of domain {@link {{$sourceClassName}}}.<p/>
 *
 * This class was generated automatically. Don't try to change it.
 */
@ObjectHandle({{$sourceClassSimpleName}}.class)
{{$generatedAnnotation}}
public class {{$classSimpleName}}{{$classTypeParams}} implements {{$movableObjectHandleName}}{{$classTypeParamsBrief}} {
  private final {{$childObjectHandleType}} {{$childField}};

  public {{$classSimpleName}}({{$childObjectHandleType}} {{$childField}}) {
    this.{{$childField}} = {{$childField}};
  }

{{when $isAlias}}
  @Override
  public Type<{{$mainPrimaryDomainSimpleName}}{{$primaryDomainTypeArguments}}> domain() {
    return Types.of({{$mainPrimaryDomainSimpleName}}.class);
  }

  @Override
  public Class<{{$mainPrimaryDomainSimpleName}}{{$primaryDomainTypeArguments}}> domainClass() {
    return (Class) {{$mainPrimaryDomainSimpleName}}.class;
  }
{{else}}
{{when $domainTypeParamsBrief.isEmpty()}}
  @Override
  public Type<{{$parentDomainClassSimpleName}}> domain() {
    return Types.of({{$parentDomainClassSimpleName}}.class);
  }
{{else}}
  @Override
  public Type<{{$parentDomainClassSimpleName}}{{$domainTypeParamsBrief}}> domain() {
    return null;
  }

 @Override
  public Class<{{$parentDomainClassSimpleName}}{{$domainTypeParamsBrief}}> domainClass() {
    return null;
  }
{{end}}
{{end}}
{{end}}
{{for method : $methods}}
  {{$method.get("javadoc")}}
  @Override
  {{$method.get("declaration")}};

{{end}}
  @Override
  public <R, Q> R moveThru(String tid, Q qualifier) throws TraverseException {
    return (R) {{$childField}}.moveThru(tid, qualifier);
  }

{{when $isAlias}}
  @Override
  public <R> R moveThru(TransitionMethod0<? super {{$mainPrimaryDomainSimpleName}}{{$classTypeParamsBrief}}, R> transitionMethod) throws TraverseException {
    return (R) {{$childField}}.moveThru((TransitionMethod0<? super {{$mainPrimaryDomainSimpleName}}, R>) transitionMethod);
  }

  @Override
  public <R, Q> R moveThru(TransitionMethod1<? super {{$mainPrimaryDomainSimpleName}}{{$classTypeParamsBrief}}, R, Q> transitionMethod, Q qualifier) throws TraverseException {
    return (R) {{$childField}}.moveThru((TransitionMethod1<? super {{$mainPrimaryDomainSimpleName}}, R, Q>) transitionMethod, qualifier);
  }
{{else}}
  @Override
  public <R> R moveThru(TransitionMethod0<? super {{$domainClassSimpleName}}{{$classTypeParamsBrief}}, R> transitionMethod) throws TraverseException {
    return (R) {{$childField}}.moveThru((TransitionMethod0<? super {{$childDomainClassSimpleName}}, R>) transitionMethod);
  }

  @Override
  public <R, Q> R moveThru(TransitionMethod1<? super {{$domainClassSimpleName}}{{$classTypeParamsBrief}}, R, Q> transitionMethod, Q qualifier) throws TraverseException {
    return (R) {{$childField}}.moveThru((TransitionMethod1<? super {{$childDomainClassSimpleName}}, R, Q>) transitionMethod, qualifier);
  }
{{end}}

  @Override
  public <R> R moveThru(Class<? extends Transition0> transitionClass) throws TraverseException {
    return (R) {{$childField}}.moveThru(transitionClass);
  }

  @Override
  public <R, Q> R moveThru(Class<? extends Transition1> transitionClass, Q qualifier) throws TraverseException {
    return (R) {{$childField}}.moveThru(transitionClass, qualifier);
  }
}
