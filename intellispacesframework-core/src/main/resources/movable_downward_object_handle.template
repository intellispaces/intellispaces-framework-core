package {{$packageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * Movable downward object handle for objects of domain {@link {{$sourceClassName}}}.<p/>
 *
 * This class was generated automatically. Don't try to change it.
 */
@ObjectHandle
{{$generatedAnnotation}}
public class {{$classSimpleName}}{{$classTypeParams}} implements {{$movableObjectHandleName}}{{$classTypeParamsBrief}} {
  private final {{$childObjectHandleType}} {{$childField}};

  public {{$classSimpleName}}({{$childObjectHandleType}} {{$childField}}) {
    this.{{$childField}} = {{$childField}};
  }

{{for method : $additionalMethods}}
  {{$method.get("javadoc")}}
  @Override
  {{$method.get("declaration")}};

{{end}}
{{for method : $methods}}
  {{$method.get("javadoc")}}
  @Override
  {{$method.get("declaration")}};

{{end}}
  @Override
  public <B, Q> B moveThru(String tid, Q qualifier) throws TraverseException {
    return (B) {{$childField}}.moveThru(tid, qualifier);
  }

  @Override
  public <B> B moveThru(TransitionMethod0<? super {{$domainClassSimpleName}}{{$classTypeParamsBrief}}, B> transitionMethod) throws TraverseException {
    return (B) {{$childField}}.moveThru((TransitionMethod0<? super {{$childDomainClassSimpleName}}, B>) transitionMethod);
  }

  @Override
  public <B, Q> B moveThru(TransitionMethod1<? super {{$domainClassSimpleName}}{{$classTypeParamsBrief}}, B, Q> transitionMethod, Q qualifier) throws TraverseException {
    return (B) {{$childField}}.moveThru((TransitionMethod1<? super {{$childDomainClassSimpleName}}, B, Q>) transitionMethod, qualifier);
  }
}
